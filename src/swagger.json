{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Simple Order Service",
        "description": "This service allows customers to place orders via a REST API. It models the current inventory, deducting from inventory as orders are created, and adding inventory back if orders are canceled. A CRUD style API in NodeJs using TypeScript",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "/",
            "description": "Local Dev"
        }
    ],
    "tags": [
        {
            "name": "Products",
            "description": "API for products"
        },
        {
            "name": "Inventories",
            "description": "API for inventories"
        },
        {
            "name": "Customers",
            "description": "API for customers"
        }
    ],
    "paths": {
        "/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "requestBody": {
                    "description": "product Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductFull"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/products/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the product that we want to match",
                    "schema": {
                        "type" : "string"
                    }
                }
            ],
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Product with id",
                        "schema": {
                            "$ref": "#/components/schemas/id"
                        },
                        "example": "6e6de3b7-fcda-4b0e-8fd4-53eee2c34e99"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductFull"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Product not found."
                    }
                }
            },
            "put": {
                "summary": "Update product with given ID",
                "tags": [
                    "Products"
                ],
                "requestBody": {
                    "description": "Product Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Product with new values of properties",
                        "schema": {
                            "$ref": "#/components/schemas/id"
                        },
                        "example": "6e6de3b7-fcda-4b0e-8fd4-53eee2c34e99"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Product not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete Product with given ID",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Product with id",
                        "schema": {
                            "$ref": "#/components/schemas/id"
                        },
                        "example": "6e6de3b7-fcda-4b0e-8fd4-53eee2c34e99"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Product not found."
                    }
                }
            }
        },
        "/inventories": {
            "get": {
                "tags": [
                    "Inventories"
                ],
                "summary": "Get all inventories in system",
                "parameters": [
                    {
                        "in": "query",
                        "name": "productId",
                        "required": true,
                        "description": "Product with id",
                        "schema": {
                            "$ref": "#/components/schemas/id"
                        },
                        "example": "6e6de3b7-fcda-4b0e-8fd4-53eee2c34e99"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventories"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Inventories"
                ],
                "summary": "Create a new inventory with given product ID",
                "requestBody": {
                    "description": "Inventory Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryFull"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/inventories/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the Inventory that we want to match",
                    "schema": {
                        "type" : "string"
                    }
                }
            ],
            "get": {
                "tags": [
                    "Inventories"
                ],
                "summary": "Get inventory with given Inventory ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Inventory with id",
                        "schema": {
                            "$ref": "#/components/schemas/id"
                        },
                        "example": "6e6de3b7-fcda-4b0e-8fd4-53eee2c34e99"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryFull"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Inventory not found."
                    }
                }
            },
            "put": {
                "summary": "Update Inventory with given Inventory ID",
                "tags": [
                    "Inventories"
                ],
                "requestBody": {
                    "description": "Inventory Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Inventory with given id to have the updated properties",
                        "schema": {
                            "$ref": "#/components/schemas/id"
                        },
                        "example": "6e6de3b7-fcda-4b0e-8fd4-53eee2c34e99"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Inventory not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete Inventory with given ID",
                "tags": [
                    "Inventories"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Inventory with given id",
                        "schema": {
                            "$ref": "#/components/schemas/id"
                        },
                        "example": "6e6de3b7-fcda-4b0e-8fd4-53eee2c34e99"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Inventory not found."
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get all customers in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customers"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Create a new customer",
                "requestBody": {
                    "description": "customer Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerFull"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/customers/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the customer that we want to match",
                    "schema": {
                        "type" : "string"
                    }
                }
            ],
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get customer with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Customer with id",
                        "schema": {
                            "$ref": "#/components/schemas/id"
                        },
                        "example": "6e6de3b7-fcda-4b0e-8fd4-53eee2c34e99"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomersFull"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Customer not found."
                    }
                }
            },
            "put": {
                "summary": "Update customer with given ID",
                "tags": [
                    "Customers"
                ],
                "requestBody": {
                    "description": "Customer Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Customer with new values of properties",
                        "schema": {
                            "$ref": "#/components/schemas/id"
                        },
                        "example": "6e6de3b7-fcda-4b0e-8fd4-53eee2c34e99"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Customer not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete Customer with given ID",
                "tags": [
                    "Customers"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Customer with id",
                        "schema": {
                            "$ref": "#/components/schemas/id"
                        },
                        "example": "6e6de3b7-fcda-4b0e-8fd4-53eee2c34e99"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Customer not found."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "id": {
                "properties": {
                    "uuid": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": "e6b61600-1afe-4d0d-9ff9-e9a2d3caed01"
                }
            },
            "Product": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    }
                },
                "example": {
                    "name": "Lululemon pants",
                    "description": "Commuter",
                    "price": 100
                }
            },
            "ProductFull": {
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    }
                },
                "example": {
                    "productId": "e6b61600-1afe-4d0d-9ff9-e9a2d3caed01",
                    "name": "Lululemon pants",
                    "description": "Commuter",
                    "price": 100
                }
            },
            "Products": {
                "type": "array",
                "items": {
                    "$ref":  "#/components/schemas/ProductFull"
                }
            },
            "Inventory": {
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "number"
                    }
                },
                "example": {
                    "productId": "e6b61600-1afe-4d0d-9ff9-e9a2d3caed01",
                    "color": "black",
                    "size": "Large",
                    "quantity": 50
                }
            },
            "InventoryFull": {
                "type": "object",
                "properties": {
                    "inventoryId": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "number"
                    }
                },
                "example": {
                    "inventoryId": "a6b61600-1afe-4d0d-9ff9-e9a2d3caed02",
                    "productId": "e6b61600-1afe-4d0d-9ff9-e9a2d3caed01",
                    "color": "black",
                    "size": "Large",
                    "quantity": 50
                }
            },
            "Inventories": {
                "type": "array",
                "items": {
                    "$ref":  "#/components/schemas/InventoryFull"
                }
            },
            "Customer": {
                "type": "object",
                "properties": {
                    "fullName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "example": {
                    "fullName": "Ryan Samberg",
                    "email": "Ryan.Samberg.test@gmail.com"
                }
            },
            "CustomersFull": {
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "example": {
                    "customerId": "e6b61600-1afe-4d0d-9ff9-e9a2d3caed01",
                    "fullName": "Ryan Samberg",
                    "email": "Ryan.Samberg.test@gmail.com"
                }
            },
            "Customers": {
                "type": "array",
                "items": {
                    "$ref":  "#/components/schemas/Customer"
                }
            }
        }
    }
}
